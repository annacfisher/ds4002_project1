## The below scripts relate to the EDA portion of our project, where we investigated different factors and variables within our dataset of extracted tweets.
## The order of such scripts with plots are: 
## 1) Histogram of Average Tweet Length of Recruits; 
## 2) Scatterplot showing the correlation of Tweet Length Star Rating (XOS);
## 3) Stacked Bar Chart of Number of Recruits by State and XOS Rating

##  1) HISTOGRAM
# Importing the necessary libraries. Pandas for data wrangling, subequently matplotlib for plotting/making the visuals.
import pandas as pd
import matplotlib.pyplot as plt

# Reads the tweet data from an uploaded CSV file into a pandas DataFrame. 
data = pd.read_csv('Extracted Twitter Data - All_Recruits.csv')

# The below filters the dataset to exclude tweets from one user, 'MarlenBright5', as a manual error occured when pulling data from such user (too many tweets extracted, which skewed the data/was not consistent with the rest of recruit data). 
filtered_data = data[data['User'] != 'MarlenBright5'] 

# Calculates and outputs the length (by character count) of each tweet, grouped by specific user, from the above filtered dataset, "filtered_data".
user_avg_tweet_length = filtered_data.groupby('User')['Tweet'].apply(lambda x: x.str.len().mean()).reset_index(name='Average Tweet Length')

# Sorts and orders the filtered data from the CSV file, by average tweet length in descending order, for easier visualization and understanding.
user_avg_tweet_length = user_avg_tweet_length.sort_values(by='Average Tweet Length', ascending=False)

# The remaining code below involves the second imported library, and creates a histogram on the above.
plt.figure(figsize=(12, 8))
bars = plt.bar(user_avg_tweet_length['User'], user_avg_tweet_length['Average Tweet Length'], color='orange', edgecolor='black')

plt.xlabel('X Handle (Username)')
plt.ylabel('Average Tweet Length (characters)')
plt.title('Average Tweet Length by each Recruit')
plt.xticks(rotation=90)  # Rotate the usernames on the x-axis for better readability

plt.grid(True, which='both', axis='y', linestyle='--', linewidth=0.5, color='grey')  # Add horizontal grid lines for y-axis

plt.show()

## 2) SCATTERPLOT
# Importing necessary libraries.
import pandas as pd
import matplotlib.pyplot as plt

# Loads in the data from the uploaded file into a dataframe, "data".
data = pd.read_csv('Extracted Twitter Data - All_Recruits.csv') #here, insert the specific .csv file name

# Calculates the length of each tweet, by character
data['Tweet Length'] = data['Tweet'].apply(len)

# Groups the data by XOS rating (star rating) and then calculates the avg. tweet length for each rating, 1-5.
rating_stats = data.groupby('XOS_Rating').agg({
    'Tweet Length': 'mean'
}).reset_index()

# Produces correlation coefficient for the grouped data on XOS ratings and tweet length
correlation = rating_stats['Tweet Length'].corr(rating_stats['XOS_Rating'])

# the below code produces the scatterplot, and also lists the specific characteristics/details wanted in the scatterplot visual.
plt.figure(figsize=(10, 6))
plt.scatter(rating_stats['XOS_Rating'], rating_stats['Tweet Length'], alpha=0.7, color='orange', s=100)
plt.title('Scatter Plot of Average Tweet Length vs. XOS Rating')
plt.xlabel('XOS Rating')
plt.ylabel('Average Tweet Length')
plt.grid(True)
plt.show()

## 3) STACKED BAR CHART

data['Count'] = 1 #adds new column to dataframe, 'Count'.
recruits_by_state_rating = data.pivot_table(index='State', columns='XOS_Rating', values='Count', aggfunc='sum', fill_value=0) #groups data by state and XOS rating, with an aggregate of each

# the rest of the code creates the stacked bar chart, with specific details for visualization customization. Of note, state is on the X and stacked is the XOS rating.
recruits_by_state_rating.plot(kind='bar', stacked=True, figsize=(12, 8))
plt.title('Number of Recruits by State and XOS Rating')
plt.xlabel('State')
plt.ylabel('Number of Recruits')
plt.xticks(rotation=45)
plt.legend(title='XOS Rating')
plt.show()
